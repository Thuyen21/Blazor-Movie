@attribute [Authorize(Roles = "Admin")]
@page "/BanAccount/{Id}"

@*<div></div>
	@if (acc == null)
	{
	<div>Loading</div>
	}
	else
	{
	<div>Id:</div>
	<div>@acc.Id</div>
	<div>Email:</div>
	<div>@acc.Email</div>
	<div>Name:</div>
	<div>@acc.Name</div>
	<div>DateOfBirth:</div>
	<div>@acc.DateOfBirth.ToShortDateString()</div>
	<div>Role:</div>
	<div>@acc.Role</div>
	<div>Wallet:</div>
	<div>@acc.Wallet</div>
	}


	<button class="btn btn-primary" @onclick="Ban">Ban</button>

	<button class="btn btn-primary" @onclick="UnBan">UnBan</button>*@

<head>
	<meta charset="UTF-8">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
</head>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
<div class="form-gap"></div>
<div class="container">
	@if (acc == null)
	{
		<div>Loading</div>
	}
	else
	{
		<div class="row">
			<div class="col-md-4 col-md-offset-4">
				<div class="panel panel-default">
					<div class="out-panel-body">
						<div class="text-center">
							<h3><i class="fa fa-key fa-4x"></i></h3>
							<h2 class="text-center">Ban this?</h2>
							<p>You can ban account has ID below</p>
							<div class="panel-body">
								<div class="input-box">
									<div class="input-group">
										@*<span class="input-group-addon"><i class="glyphicon glyphicon-envelope color-blue"></i></span>*@
										<input placeholder="@acc.Id" class="form-control" type="email" style="pointer-events: none;">
									</div>
								</div>
								<div class="input-boxes">
									<button class="btn btn-primary" @onclick="Ban">Ban</button>
									<button class="btn btn-primary" @onclick="UnBan">UnBan</button>
								</div>
								<div>
									<div id='container'>
										<div id='hideMe'>@content</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
</div>
@code{
[Parameter]
        public string Id { get; set; }
        private AccountManagementModel acc;
        private string content;
        protected override async Task OnInitializedAsync()
        {
            acc = await _httpClient.GetFromJsonAsync<AccountManagementModel>($"Admin/EditAccount/{Id}");
        }
        private async Task Ban()
        {
            HttpResponseMessage response = await _httpClient.PostAsJsonAsync<string>("Admin/Ban", acc.Id);
            content = await response.Content.ReadAsStringAsync();
        }
        private async Task UnBan()
        {
            HttpResponseMessage response = await _httpClient.PostAsJsonAsync<string>("Admin/UnBan", acc.Id);
            content = await response.Content.ReadAsStringAsync();
        }
}