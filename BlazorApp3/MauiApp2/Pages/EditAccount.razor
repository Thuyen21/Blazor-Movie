@page "/EditAccount/{Id}"
@attribute [Authorize(Roles = "Admin")]

@*<div>@content</div>
	@if (acc == null)
	{
	<p>
	<em>Loading...</em>
	</p>
	}
	else
	{
	<EditForm Model="@acc" OnValidSubmit="@HandleValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	Email
	<InputText @bind-Value="@acc.Email" />
	Name
	<InputText @bind-Value="@acc.Name" />
	Role
	<InputText @bind-Value="@acc.Role" />
	DateOfBirth
	<InputDate @bind-Value="@acc.DateOfBirth" />
	Wallet
	<InputNumber @bind-Value="@acc.Wallet" />

	<button type="submit">Submit</button>
	</EditForm>
	}*@



<head>
	<meta charset="UTF-8">
	<!-- Fontawesome CDN Link -->
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>
	<div class="container">
		<input type="checkbox" id="flip">
		@if (acc == null)
		{
			<p>
				<em>Loading...</em>
			</p>
		}
		else
		{
			<div class="forms">
				<div class="form-content">
					<div class="login-form">
						<div class="title">Replace any data of ID </div>
						<div class="title">@acc.Id</div>
							@if (showAlert)
{
    <MudAlert Severity="severity" Variant="Variant.Filled" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true" CloseIconClicked="(() => CloseAlert())">@content</MudAlert>
}

						<form action="#">
							<div class="input-boxes">
								<EditForm Model="@acc" OnValidSubmit="@HandleValidSubmit">
									<DataAnnotationsValidator />
									<ValidationSummary />
									<div class="input-box">
										<i class="fas fa-envelope"></i>
										<input type="text" placeholder="Replace this email" @bind="@acc.Email" required>
									</div>
									<div class="input-box">
										<i class="fas fa-lock"></i>
										<input type="text" placeholder="Replace this name" @bind="@acc.Name" required>
									</div>
									<div class="input-box">
										<i class="fas fa-user"></i>
										<input type="text" placeholder="Replace this role" @bind="@acc.Role" required>
									</div>
									<div class="input-box">
										<i class="far fa-calendar-alt"></i>
										<input type="date" placeholder="Date of Birth" @bind="@acc.DateOfBirth" required>
									</div>
									<div class="input-box">
										<i class="fas fa-money-check"></i>
										<input type="number" step="0.0000000000001" placeholder="Replace this wallet"
										@bind="@acc.Wallet" required>
									</div>
									<div class="button input-box">
										<input type="submit" value="Confirm">
									</div>
								</EditForm>
							</div>
						</form>
					</div>
				</div>
			</div>
		}

	</div>
</body>

@code{
        [Parameter]
        public string Id { get; set; }

        private AccountManagementModel acc;
        private string content;
        private bool showAlert = false;
        private Severity severity;
        private void CloseAlert()
        {
            showAlert = false;
        }

        protected override async Task OnInitializedAsync()
        {
            acc = await _httpClient.GetFromJsonAsync<AccountManagementModel>($"Admin/EditAccount/{Id}");
        }

        private async Task HandleValidSubmit()
        {
            AccountManagementModel accNew = acc;
            accNew.DateOfBirth = accNew.DateOfBirth.ToUniversalTime().AddDays(1);
            HttpResponseMessage response = await _httpClient.PostAsJsonAsync<AccountManagementModel>("Admin/EditAccount", accNew);
            content = await response.Content.ReadAsStringAsync();
            if (response.IsSuccessStatusCode)
            {
                severity = Severity.Success;
            }
            else
            {
                severity = Severity.Error;
            }

            showAlert = true;
        }
}