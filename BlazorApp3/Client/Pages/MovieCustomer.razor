
@page "/MovieCustomer"
@using Firebase.Storage
@attribute [Authorize(Roles = "Customer")]
@*<input placeholder="Enter your text" @bind-value="@searchString" />

<button class="btn btn-primary" @onclick="Search">Search</button>

@if (movies == null)
{
    <div>Loading</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Movie Image Link</th>
                <th>MovieId</th>

                <th>StudioId</th>
                <th><button class="btn btn-primary" @onclick="GenreSortParm">MovieGenre</button></th>
                <th><button class="btn btn-primary" @onclick="NameSortParm">MovieName</button></th>
                <th><button class="btn btn-primary" @onclick="DateSortParm">PremiereDate</button></th>
                <th></th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in movies)
            {
                <tr>
                    <td><img src="@DicImageLink[item.MovieId]" width="100" height="100"></td>

                    <td>@item.MovieId</td>

                    <td>@item.StudioId</td>
                    <td>@item.MovieGenre</td>
                    <td>@item.MovieName</td>
                    <td>@item.PremiereDate.ToShortDateString()</td>
                    @{
                        var linkWatch = $"WatchCustomer/{item.MovieId}";
                    }
                    <td>
                        <NavLink class="nav-link" href="@linkWatch">Watch</NavLink>
                    </td>

                </tr>
            }
        </tbody>
    </table>
    <button @onclick="LoadMore">Click to load more</button>

}
*@



<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @*<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>*@
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet">
    @*<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>*@
</head>

<body>
    <div class="container p-0">

        <button @onclick="GenreSortParm" class="btn btn-primary float-right mt-n1" style="margin: 3%; width: 117px">
            <i class="fas fa-plus"></i>Movie Genre
        </button>
        <button @onclick="NameSortParm" class="btn btn-primary float-right mt-n1" style="margin: 3%; width: 117px">
            <i class="fas fa-plus"></i>Movie Name
        </button>
        <button @onclick="DateSortParm" class="btn btn-primary float-right mt-n1" style="margin: 3%; width: 117px">
            <i class="fas fa-plus"></i>Movie Date
        </button>
        <h1 class="h3 mb-3">Projects Movie</h1>
        <div class="input-group mb-3" style="margin-right: 5%">
            <input type="search" class="form-control rounded" placeholder="Search" aria-label="Search"
                   aria-describedby="search-addon" @bind-value="@searchString" />
            <button type="button" class="btn btn-primary" @onclick="Search">search</button>
        </div>

        <div class="row">
            @if (movies == null)
            {
                <div>Loading</div>
            }
            else
            {
                @foreach (var item in movies)
                {
                    <div class="col-12 col-md-6 col-lg-3">
                        <div class="card">
                            <img class="card-img-top" src="@DicImageLink[item.MovieId]" alt="Unsplash" style="width=320px; height: 280px"> 
                            <div class="card-header px-4 pt-4">
                                <div class="card-actions float-right">
                                    <div class="dropdown show">
                                        <a href="#" data-toggle="dropdown" data-display="static">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                         fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                         stroke-linejoin="round" class="feather feather-more-horizontal align-middle">
                                                <circle cx="12" cy="12" r="1"></circle>
                                                <circle cx="19" cy="12" r="1"></circle>
                                                <circle cx="5" cy="12" r="1"></circle>
                                            </svg>
                                        </a>

                                        <div class="dropdown-menu dropdown-menu-right">
                                            <a class="dropdown-item" href="#">Action</a>
                                            <a class="dropdown-item" href="#">Another action</a>
                                            <a class="dropdown-item" href="#">Something else here</a>
                                        </div>
                                    </div>
                                </div>
                                <h2 class="card-title mb-0">@item.MovieName</h2>
                                <div class="badge bg-warning my-2">@item.MovieGenre movie</div>
                            </div>
                            <div class="card-body px-4 pt-2">
                                <p>
                                    [MOVIE DESCRIPTION]
                                    Nam pretium turpis et arcu. Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet
                                    iaculis, ipsum. Sed aliquam
                                    ultrices mauris.
                                </p>

                                <img src="https://bootdey.com/img/Content/avatar/avatar3.png" class="rounded-circle mr-1"
                             alt="Avatar" width="28" height="28">
                                <img src="https://bootdey.com/img/Content/avatar/avatar2.png" class="rounded-circle mr-1"
                             alt="Avatar" width="28" height="28">
                                <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle mr-1"
                             alt="Avatar" width="28" height="28">
                             <h5 style="font-weight: 200; font-size: .775rem; justify-content:center">Public since: @item.PremiereDate.ToShortDateString()</h5>
                                
                            </div>
                            <!-- <ul class="list-group list-group-flush">
                                <li class="list-group-item px-4 pb-4">
                                    <p class="mb-2 font-weight-bold">Progress <span class="float-right">65%</span></p>
                                    <div class="progress progress-sm">
                                        <div class="progress-bar" role="progressbar" aria-valuenow="65" aria-valuemin="0"
                                            aria-valuemax="100" style="width: 65%;">
                                        </div>
                                    </div>
                                </li>
                            </ul>		 -->
                    <div class="card-body px-4 pt-2">
                                <a href="#link" class="btn btn-danger btn-lg btn-block" role="button">
                                    Trailer <i class="bi bi-film">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-film" viewBox="0 0 16 16">
                                            <path d="M0 1a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1zm4 0v6h8V1H4zm8 8H4v6h8V9zM1 1v2h2V1H1zm2 3H1v2h2V4zM1 7v2h2V7H1zm2 3H1v2h2v-2zm-2 3v2h2v-2H1zM15 1h-2v2h2V1zm-2 3v2h2V4h-2zm2 3h-2v2h2V7zm-2 3v2h2v-2h-2zm2 3h-2v2h2v-2z" />
                                        </svg>
                                    </i>
                                </a>
                                @{
                                    var linkWatch = $"WatchCustomer/{item.MovieId}";
                                }
                                <a href="@linkWatch" class="btn btn-success btn-lg btn-block" role="button">
                                    Play<i class="bi bi-play"></i>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-play" viewBox="0 0 16 16">
                                        <path d="M10.804 8 5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z" />
                                    </svg>
                                </a>
                            </div>
                        </div>
                    </div>
                } @*end foreach*@

            } @*end else*@

        </div>
         <a class="text-center w-100 d-block mt-4 font-weight-bold" style="cursor: pointer;" @onclick="LoadMore">See more Feedbacks</a>

    </div>
</body>






@code {
    private List<MovieModel> movies = new();
    private string? searchString { get; set; }
    private bool isSearch = false;
    private readonly Dictionary<string, string> DicImageLink = new();
    private string sort = null;
    private int index = 0;
    private async Task NameSortParm()
    {
        index = 0;
        sort = sort == "name" ? "nameDesc" : "name";
        movies = await _httpClient.GetFromJsonAsync<List<MovieModel>>($"Customer/Movie/ /{sort}/{index}");
        isSearch = false;
        searchString = null;
    }

    private async Task DateSortParm()
    {
        index = 0;
        sort = sort == "date" ? "dateDesc" : "date";
        movies = await _httpClient.GetFromJsonAsync<List<MovieModel>>($"Customer/Movie/ /{sort}/{index}");
        isSearch = false;
        searchString = null;
    }

    private async Task GenreSortParm()
    {
        index = 0;
        sort = sort == "genre" ? "genreDesc" : "genre";
        movies = await _httpClient.GetFromJsonAsync<List<MovieModel>>($"Customer/Movie/ /{sort}/{index}");
        isSearch = false;
        searchString = null;
    }

    protected override async Task OnInitializedAsync()
    {
        var moviesTask = Task.Run(async () =>
        {
            movies = await _httpClient.GetFromJsonAsync<List<MovieModel>>($"Customer/Movie/ / /{index}");
        });
        char[] tokena = { };
        var tokenaTask = Task.Run(async () =>
        {
            tokena = await _httpClient.GetFromJsonAsync<char[]>("User/GetToken");
        });

         await Task.WhenAll(moviesTask, tokenaTask);


        string token = new string(tokena);
        foreach (MovieModel item in movies)
        {
            try
            {
                string ImageLink = await new FirebaseStorage("movie2-e3c7b.appspot.com", new FirebaseStorageOptions
                    {
                        AuthTokenAsyncFactory = async () => await Task.FromResult(await Task.FromResult(token)),
                        ThrowOnCancel = true,
                        HttpClientTimeout = TimeSpan.FromHours(2)
                    }).Child(item.StudioId).Child(item.MovieId).Child("Image").GetDownloadUrlAsync();
                if (!DicImageLink.ContainsKey(item.MovieId))
                {
                    DicImageLink.Add(item.MovieId, ImageLink);
                }
                else
                {
                    DicImageLink[item.MovieId] = ImageLink;
                }
            }
            catch
            {
                DicImageLink.Add(item.MovieId, null);
            }
        }
    }
    private async Task Search()
    {
        index = 0;
        if (searchString != null)
        {
            movies = await _httpClient.GetFromJsonAsync<List<MovieModel>>($"Customer/Movie/{searchString}/ /{index}");
            isSearch = true;
        }
        else
        {
            movies = await _httpClient.GetFromJsonAsync<List<MovieModel>>($"Customer/Movie/ / /{index}");
            isSearch = false;
        }
        sort = null;
    }
    private async Task LoadMore()
    {
        index++;
        if (isSearch)
        {
            movies.AddRange(await _httpClient.GetFromJsonAsync<List<MovieModel>>($"Customer/Movie/{searchString}//{index}"));
        }
        else if (sort != null)
        {
            movies.AddRange(await _httpClient.GetFromJsonAsync<List<MovieModel>>($"Customer/Movie/ /{sort}/{index}"));
        }
        else
        {
            movies.AddRange(await _httpClient.GetFromJsonAsync<List<MovieModel>>($"Customer/Movie/ / /{index}"));
        }
    }
}