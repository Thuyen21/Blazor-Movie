@inject IJSRuntime JS
@inject IAccountService _accountService;
@page "/login"
@using MauiApp1.Services

@*<button @onclick="@( () =>  DivCSS("display: block;"))" style="width:auto; margin:0; position: absolute;top: 50%;left: 50%;" class=" zoom2">Login</button>*@

@*<div id="id01" class="modal" style="@divCSS">
	<div class="modal-content animate" style="border-radius: 12px;">
	<EditForm Model="@login" OnValidSubmit="HandleValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="imgcontainer">
	<span @onclick="@( () =>  DivCSS("display: none;"))" class="close" title="Close Modal">&times;</span>
	<img src="https://www.w3schools.com/howto/img_avatar2.png" alt="Avatar" class="avatar">
	</div>
	<div class="container">
	<label for="email"><b>Email</b></label>
	<input type="text" @bind="@login.Email" placeholder="Enter Email" class="zoom" />
	<label for="psw"><b>Password</b></label>
	<input type="password" @bind="@login.Password" placeholder="Enter Password" class="zoom" />
	<button type="submit" class="zoom">Login</button>
	<label>
	<input type="checkbox" checked="checked" name="remember"> Remember me
	</label>
	</div>
	<div class="container" style="background-color:#f1f1f1">
	<button type="button" @onclick="@(async () => await JS.InvokeVoidAsync("myFunction"))" class="cancelbtn">Cancel</button>
	<span class="psw">Forgot <a href="ResetPassword">password?</a></span>
	</div>
	</EditForm>
	</div>
	</div>
	<div>@content</div>*@





@code
{
	protected string divCSS = "display: none;";
	protected void DivCSS(string divCSS)
	{
		this.divCSS = divCSS;
	}
}

<head>
	<meta charset="UTF-8">
	<link rel="stylesheet" href="style.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<style>
	@Css
</style>
<body>
	<div class="container">
		<input type="checkbox" id="flip">
		<div class="cover">
			<div class="front">
				<img src="https://bvuvolunteers.org/wp-content/uploads/2021/03/coffee-and-keyboard.jpg" alt="">
				<div class="text">
					<span class="text-1">Every new friend is a <br> new adventure</span>
					<span class="text-2">Let's get connected</span>
				</div>
			</div>
			<div class="back">
				<img class="backImg" src="https://bvuvolunteers.org/wp-content/uploads/2021/03/coffee-and-keyboard.jpg" alt="">
				<div class="text">
					<span class="text-1">Complete miles of journey <br> with one step</span>
					<span class="text-2">Let's get started</span>
				</div>
			</div>
		</div>
		<div class="forms">
			<div class="form-content">
				<div class="login-form">
					<div class="title">Login</div>
					<form action="#">
						<div class="input-boxes">
							<EditForm Model="@login" OnValidSubmit="HandleValidSubmit">
								<DataAnnotationsValidator />
								<ValidationSummary />
								<div class="input-box">
									<i class="fas fa-envelope"></i>
									<input type="text" @bind="@login.Email" placeholder="Enter your email" required>
								</div>
								<div class="input-box">
									<i class="fas fa-lock"></i>
									<input type="password" @bind="@login.Password" placeholder="Enter your password" required>
								</div>
								<div class="text"><a href="/ResetPassword">Forgot password?</a></div>
								<div class="button input-box">
									<input type="submit" value="Login">
								</div>
								<div class="input-box" style="visibility: hidden;">
									<i class="fas fa-envelope"></i>
								</div>
								<div class="input-box" style="visibility: hidden;">
									<i class="fas fa-envelope" style="visibility: hidden;"></i>
								</div>
								<div class="input-box" style="visibility: hidden;">
									<i class="fas fa-envelope"></i>
								</div>
								<div class="text sign-up-text">Don't have an account? <a href="/SignUp"><label>Sigup now</label></a></div>
								<div class="text sign-up-text">@content</div>
							</EditForm>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</body>


@code{
	 protected LogInModel login = new LogInModel();
        protected string content;


        protected async Task HandleValidSubmit()
        {
            string? remoteUserAgent = await JS.InvokeAsync<string>("getUserAgent");



            login.UserAgent = remoteUserAgent;

            HttpResponseMessage response = await _httpClient.PostAsJsonAsync<LogInModel>("user/login", login);
            content = await response.Content.ReadAsStringAsync();
            if (response.IsSuccessStatusCode)
            {

                //_navigationManager.NavigateTo("/", true);
                _accountService.Login();
                //new CustomAuthenticationStateProvider(_httpClient).Update();
                //new NavMenu().MenuChanged();
                _navigationManager.NavigateTo("/");
            }
        }
		protected string Css = "/*body { font-family: Arial, Helvetica, sans-serif; }*/ /* Full-width input fields */ /*input[type=text], input[type=password] { width: 100%; padding: 12px 20px; margin: 8px 0; display: inline-block; border: 1px solid #ccc; box-sizing: border-box; border-radius: 12px; }*/ /* Set a style for all buttons */ /*button { background-color: #88ebc6; color: white; padding: 14px 20px; margin: 8px 0; border: none; cursor: pointer; width: 100%; border-radius: 12px; } button:hover { opacity: 0.8; }*/ /* Extra styles for the cancel button */ /*.cancelbtn { width: auto; padding: 10px 18px; background-color: #f44336; border-radius: 12px; }*/ /* Center the image and position the close button */ /*.imgcontainer { text-align: center; margin: 24px 0 12px 0; position: relative; } img.avatar { width: 25%; border-radius: 12px; } img.avatar:hover { transition: transform 0.6s; transform: rotateY(180deg); } .zoom:hover { transform: scale(1.05);*/ /* (110% zoom - Note: if the zoom is too large, it will go outside of the viewport) */ /*} .zoom2:hover { transform: scale(1.5); background-color: #f44336; } .container { padding: 16px; border-radius: 12px; } span.psw { float: right; padding-top: 16px; }*/ /* The Modal (background) */ /*.modal { display: none;*/ /* Hidden by default */ /*position: fixed;*/ /* Stay in place */ /*z-index: 1;*/ /* Sit on top */ /*left: 0; top: 0; width: 100%;*/ /* Full width */ /*height: 100%;*/ /* Full height */ /*overflow: auto;*/ /* Enable scroll if needed */ /*background-color: rgb(0,0,0);*/ /* Fallback color */ /*background-color: rgba(0,0,0,0.4);*/ /* Black w/ opacity */ /*padding-top: 60px; }*/ /* Modal Content/Box */ /*::deep .modal-content { background-color: #fefefe; margin: 5% auto 15% auto;*/ /* 5% from the top, 15% from the bottom and centered */ /*border: 1px solid #888; width: 30%;*/ /* Could be more or less, depending on screen size */ /*}*/ /* The Close Button (x) */ /*.close { position: absolute; right: 25px; top: 0; color: #000; font-size: 35px; font-weight: bold; } .close:hover, .close:focus { color: red; cursor: pointer; }*/ /* Add Zoom Animation */ /*::deep .animate { -webkit-animation: animatezoom 1.0s; animation: animatezoom 1.0s } @-webkit-keyframes animatezoom { from { -webkit-transform: scale(0) } to { -webkit-transform: scale(1) } } @keyframes animatezoom { from { transform: scale(0) } to { transform: scale(1) } }*/ /* Change styles for span and cancel button on extra small screens */ /*@media screen and (max-width: 300px) { span.psw { display: block; float: none; } .cancelbtn { width: 100%; } }*/ /* Google Font Link */ * { margin: 0; padding: 0; box-sizing: border-box; font-family: \"Poppins\", sans-serif; } body { min-height: 100vh; display: flex; align-items: center; justify-content: center; background: #ffffff; padding: 30px; } .container { position: relative; max-width: 850px; width: 850px; background: #fff; padding: 40px 30px; box-shadow: 0 5px 10px rgba(0,0,0,0.2); perspective: 2700px; border-radius: 12px; } .container .cover { position: absolute; top: 0; left: 50%; height: 100%; width: 50%; z-index: 98; transition: all 1s ease; transform-origin: left; transform-style: preserve-3d; } .container .cover::before { content: ''; position: absolute; height: 100%; width: 100%; background: #7d2ae8; opacity: 0.5; z-index: 100; } .container .cover::after { content: ''; position: absolute; height: 100%; width: 100%; background: #7d2ae8; opacity: 0.5; z-index: 100; transform: rotateY(180deg); } .container #flip:checked ~ .cover { transform: rotateY(-180deg); } .container .cover img { position: absolute; height: 100%; width: 100%; object-fit: cover; z-index: 12; backface-visibility: hidden; } .container .cover .back .backImg { transform: rotateY(180deg); transform: rotateY(180deg); } .container .cover .text { position: absolute; z-index: 111; height: 100%; width: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center; } .cover .text .text-1, .cover .text .text-2 { font-size: 26px; font-weight: 600; color: #fff; text-align: center; backface-visibility: hidden; } .cover .back .text .text-1, .cover .back .text .text-2 { transform: rotateY(180deg); } .cover .text .text-2 { font-size: 15px; font-weight: 500; } .container .forms { height: 100%; width: 100%; background: #fff; } .container .form-content { display: flex; align-items: center; justify-content: space-between; } .form-content .login-form, .form-content .signup-form { width: calc(100% / 2 - 25px); } .forms .form-content .title { position: relative; font-size: 24px; font-weight: 500; color: #333; } .forms .form-content .title:before { content: ''; position: absolute; left: 0; bottom: 0; height: 3px; width: 25px; background: #7d2ae8; } .forms .signup-form .title:before { width: 20px; } .forms .form-content .input-boxes { margin-top: 30px; } .forms .form-content .input-box { display: flex; align-items: center; height: 50px; width: 100%; margin: 10px 0; position: relative; } .form-content .input-box input { height: 100%; width: 100%; outline: none; border: none; padding: 0 30px; font-size: 16px; font-weight: 500; border-bottom: 2px solid rgba(0,0,0,0.2); transition: all 0.3s ease; } .form-content .input-box input:focus, .form-content .input-box input:valid { border-color: #7d2ae8; } .form-content .input-box i { position: absolute; color: #7d2ae8; font-size: 17px; } .forms .form-content .text { font-size: 14px; font-weight: 500; color: #333; } .forms .form-content .text a { text-decoration: none; } .forms .form-content .text a:hover { text-decoration: underline; } .forms .form-content .button { color: #fff; margin-top: 40px; } .forms .form-content .button input { color: #fff; background: #7d2ae8; border-radius: 6px; padding: 0; cursor: pointer; transition: all 0.4s ease; } .forms .form-content .button input:hover { background: #5b13b9; } .forms .form-content label { color: #5b13b9; cursor: pointer; } .forms .form-content label:hover { text-decoration: underline; } .forms .form-content .login-text, .forms .form-content .sign-up-text { text-align: center; margin-top: 25px; } .container #flip { display: none; } @media (max-width: 730px) { .container .cover { display: none; } .form-content .login-form, .form-content .signup-form { width: 100%; } .form-content .signup-form { display: none; } .container #flip:checked ~ .forms .signup-form { display: block; } .container #flip:checked ~ .forms .login-form { display: none; } } .switch { position: relative; display: inline-block; width: 60px; height: 34px; } .switch input { opacity: 0; width: 0; height: 0; } .slider { position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: #7d2ae8; -webkit-transition: .4s; transition: .4s; } .slider:before { position: absolute; content: \"\"; height: 26px; width: 26px; left: 4px; bottom: 4px; background-color: white; -webkit-transition: .4s; transition: .4s; } input:checked + .slider { background-color: #2196F3; } input:focus + .slider { box-shadow: 0 0 1px #2196F3; } input:checked + .slider:before { -webkit-transform: translateX(26px); -ms-transform: translateX(26px); transform: translateX(26px); } /* Rounded sliders */ .slider.round { border-radius: 34px; } .slider.round:before { border-radius: 50%; }";
}